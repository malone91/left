代理模式：代理模式在不改变原始类接口的条件下，为原始类定义一个代理类，
主要目的是控制访问，而非加强功能，这是它跟装饰器模式最大的不同。
代理模式在平时的开发经常被用到，常用在业务系统中开发一些非功能性需求，
比如：监控、统计、鉴权、限流、事务、幂等、日志。

桥接模式：桥接模式的目的是将接口部分和实现部分分离，
从而让它们可以较为容易、也相对独立地加以改变。

装饰器模式：装饰者模式在不改变原始类接口的情况下，
对原始类功能进行增强，并且支持多个装饰器的嵌套使用。

适配器模式：适配器模式是一种事后的补救策略。
适配器提供跟原始类不同的接口，
而代理模式、装饰器模式提供的都是跟原始类相同的接口。