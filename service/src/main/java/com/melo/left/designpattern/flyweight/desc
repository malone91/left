享元模式
顾名思义就是被共享的单元。
享元模式的意图是复用对象，节省内存，前提是享元对象是不可变对象。

在单例模式中，一个类只能创建一个对象，而在享元模式中，一个类可以创建多个对象，
每个对象被多处代码引用共享。
实际上，享元模式有点类似于之前讲到的单例的变体：多例。
应用享元模式是为了对象复用，节省内存，而应用多例模式是为了限制对象的个数。

池化技术中的“复用”可以理解为“重复使用”，
主要目的是节省时间（比如从数据库池中取一个连接，不需要重新创建）。
在任意时刻，每一个对象、连接、线程，并不会被多处使用，
而是被一个使用者独占，当使用完成之后，放回到池中，再由其他使用者重复利用。
享元模式中的“复用”可以理解为“共享使用”，
在整个生命周期中，都是被所有使用者共享的，主要目的是节省空间。
节省空间，时间两个出发

享元模式的代码实现非常简单，主要是通过工厂模式，在工厂类中，
通过一个 Map 或者 List 来缓存已经创建好的享元对象，以达到复用的目的。

应用单例模式是为了保证对象全局唯一。
应用享元模式是为了实现对象复用，节省内存。缓存是为了提高访问效率，而非复用。