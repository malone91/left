万一哪天不同的业务对象有不同的生成规则，那么单例模式就不适合了
对OOP、继承、多态不友好

一旦你选择将某个类设计成到单例类，也就意味着放弃了继承和多态这两个强有力的面向对象特性，
也就相当于损失了可以应对未来需求变化的扩展性。

数据库连接池类设计成了单例类。
但之后我们发现，系统中有些 SQL 语句运行得非常慢。
这些 SQL 语句在执行的时候，长时间占用数据库连接资源，
导致其他 SQL 请求无法响应。为了解决这个问题，
我们希望将慢 SQL 与其他 SQL 隔离开来执行。
为了实现这样的目的，我们可以在系统中创建两个数据库连接池，
慢 SQL 独享一个数据库连接池，
其他 SQL 独享另外一个数据库连接池，这样就能避免慢 SQL 影响到其他 SQL 的执行。