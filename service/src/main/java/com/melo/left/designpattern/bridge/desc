“Decouple an abstraction from its implementation
so that the two can vary independently。”
翻译成中文就是：“将抽象和实现解耦，让它们可以独立变化。”

JDBC 驱动是桥接模式的经典应用

Class.forName("com.mysql.jdbc.Driver");//加载及注册JDBC驱动程序
String url = "jdbc:mysql://localhost:3306/sample_db?user=root&password=your_password";
Connection con = DriverManager.getConnection(url);
Statement stmt = con.createStatement()；
String query = "select * from test";
ResultSet rs=stmt.executeQuery(query);
while(rs.next()) {
  rs.getString(1);
  rs.getInt(2);
}

JDBC 本身就相当于“抽象”。注意，这里所说的“抽象”，指的并非“抽象类”或“接口”，
而是跟具体的数据库无关的、被抽象出来的一套“类库”。
具体的 Driver（比如，com.mysql.jdbc.Driver）就相当于“实现”。
注意，这里所说的“实现”，也并非指“接口的实现类”，
而是跟具体数据库相关的一套“类库”。JDBC 和 Driver 独立开发，
通过对象之间的组合关系，组装在一起。
JDBC 的所有逻辑操作，最终都委托给 Driver 来执行。