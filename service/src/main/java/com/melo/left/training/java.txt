给自己一个交代
为什么有这个课，作业怎么组织，学完这个课能得到什么，收货
400-700万一半是Java，组织
没有解决方案，学习能力精力下降，薪资倒挂，公司成本高，技能没有质的提升，不停在跟同一层次或者比你薪资低的人竞争，
内卷化，他们有更多时间去学习去竞争，难上升到另一个层次，叫程序员危机。恶性循环
这不是贩卖焦虑，程序员恰恰相反，不像医生老师，越老越不吃香

小建议：每隔3-5年，看看自己是不是在重复之前做的事儿，停留在之前的层次，如果是的话，赶紧改变自己。
能力，认知水平是不是有足够的水平，需要把自己调整一下，走出舒适区。答案就是去学习，空杯心态，技术和方法。
碎片化的只是穿起来，变成一个知识体系。接触更多的面，有更多的经验去处理问题，新知识归并到之前的东西，关联之前的知识

能不能得到我想要的，最初的初心是什么。

A深入基础 1JVM进阶 2NIO技术 3并发编程 4开发框架
B剖析性能 系统性能优化，学会性能分析和MySQL优化 超越分库分表，掌握海量业务数据的应对之道。 百分之八九十瓶颈在数据库
C分布式 服务(rpc)，缓存，消息
       架构演进   访问提速 系统关系解耦
D综合运用 分布式系统架构，业务系统重构，架构师修炼之道

一天几万秒
一线互联网公司每天是几千万订单，淘宝3000多万每天，每秒几百。 京东美团滴滴稍低
问题在秒杀 双十一一瞬间
淘宝做服务化是因为数据库，不再访问数据库而是访问服务，连接数的问题就解决掉了。
单表存的数据不超过2000万

因为Java线程绑定到OS，所有各种封装的并发类 锁

横切竖割 Spring是一种研发和协作的方式

因为重构系统，升级，为团队做出来巨大贡献。

综合应用，对内面对日常工作能够很好更快质量更高完成，对外哪天换工作去更高的岗位上，价值本身的输出
软实力把技术粘合起来，好的做事的方法

八大实战案例

JVM 使用JVM分析工具剖析JVM系统性能
NIO 使用Netty实现一个高性能业务网关
并发 使用多线程实现高并发业务处理程序
数据 基于分库分表优化处理千万业务数据
分布式 实现功能完善的服务框架
分布式 实现简单高效的消息队列
重构 某业务系统的优化重构经验拆解
高并发 简版双十一秒杀系统

学会知识 掌握方法和技巧 不断实践 积累经验

得到什么？
良好的学习方法和习惯
构建完整的技术知识体系
学习的人脉，社区

再忙也要挤出时间学习，百分之十的时间，防止恶性循环

靡不有初鲜克有终 初心是什么？
初心不是好的，一般最终不会有好的结果。
做的事情是不是和你的初心一致。

每周留出来9个小时学习，最好12个小时 周四 周六
好好做作业，实践

互相监督，互相学习

业务网关，流量网关，不同层次的网关